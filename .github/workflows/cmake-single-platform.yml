# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: Tests

on:
  push:
    branches: [ "Feature-CI_CD" ]
  pull_request:
    branches: [ "master" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: RelWithDebInfo
  BUILD_TESTS : ON

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: '6.2.4'
        host: 'linux'
        target: 'desktop'
        arch: 'gcc_64'
        install-deps : 'true'

    - name: Install env
      run: |
        sudo apt-get install -y g++ cmake 

    - name: Install SDL2 and SDL2_image
      run: |
        sudo apt-get install -y libsdl2-image-dev libsdl2-dev

    - name: Install OpenGL and GLEW
      run: |
        sudo apt-get install -y libgl1-mesa-dev libglew-dev

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/../build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DAXOMAE_BUILD_TESTS:BOOL=${{env.BUILD_TESTS}} -DAXOMAE_LUT_MEDIUMP:BOOL=ON

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/../build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/../build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}